"""Database creation

Revision ID: bec7d5606f30
Revises:
Create Date: 2023-07-21 16:14:55.033143

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = 'bec7d5606f30'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_course',
                    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
                    sa.Column('student_id', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('course_id', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], name='user_course_course_id_fkey'),
                    sa.ForeignKeyConstraint(['student_id'], ['students.id'], name='user_course_student_id_fkey'),
                    sa.PrimaryKeyConstraint('id', name='user_course_pkey')
                    )
    op.create_table('groups',
                    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('groups_id_seq'::regclass)"),
                              autoincrement=True, nullable=False),
                    sa.Column('name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
                    sa.PrimaryKeyConstraint('id', name='groups_pkey'),
                    postgresql_ignore_search_path=False
                    )
    op.create_table('students',
                    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
                    sa.Column('group', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('first_name', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
                    sa.Column('last_name', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
                    sa.ForeignKeyConstraint(['group'], ['groups.id'], name='students_group_fkey'),
                    sa.PrimaryKeyConstraint('id', name='students_pkey')
                    )
    op.create_table('courses',
                    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
                    sa.Column('course_name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
                    sa.Column('description', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
                    sa.PrimaryKeyConstraint('id', name='courses_pkey')
                    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("DROP TABLE IF EXISTS user_course CASCADE")
    op.execute("DROP TABLE IF EXISTS students CASCADE")
    op.execute("DROP TABLE IF EXISTS courses CASCADE")
    op.execute("DROP TABLE IF EXISTS groups CASCADE")
    # ### end Alembic commands ###
